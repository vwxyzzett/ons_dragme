ESX = nillocal dragStatus = {}dragStatus.isDragged = falselocal isInVehicle = falselocal InVehicle = nil--local vehicleCitizen.CreateThread(function()    while ESX == nil do        TriggerEvent('esx:getSharedObject', function(obj)            ESX = obj        end)        Citizen.Wait(0)    end    while ESX.GetPlayerData().job == nil do        Citizen.Wait(10)    end    ESX.PlayerData = ESX.GetPlayerData()end)RegisterNetEvent('esx:setJob')AddEventHandler('esx:setJob', function(job)    ESX.PlayerData.job = jobend)function CanDoJob()    for k, v in pairs(Config.Jobs.AllowedJobs) do        if v == ESX.PlayerData.job.name then            return true        end    end    return falseendfunction DragMe()    ESX.TriggerServerCallback("esx-qalle-jail:retrieveJailTime", function(inJail , JailTime)        if not inJail then            if Config.Jobs.LimitJobs and not CanDoJob() then                return            end            if dragStatus.isDragged then                exports['mythic_notify']:DoHudText('error', 'you is dragged by someone.')                return            end            local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()            local targetPed = GetPlayerPed(closestPlayer)            local isInCar = IsPedSittingInAnyVehicle(PlayerPedId())            if closestPlayer ~= -1 and closestDistance <= 3.0 and not isInCar and CanDoWhileDead(targetPed) then                TriggerServerEvent('ons_dragme:drag', GetPlayerServerId(closestPlayer))            else                exports['mythic_notify']:DoHudText('error', 'No nearby people.')            end        else            exports['mythic_notify']:DoHudText('error', 'You are jailed. cant doing that.')        end    end)endfunction PutInVehicle()    if Config.Jobs.LimitJobs and not CanDoJob() then        return    end    local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()    local targetPed = GetPlayerPed(closestPlayer)    local isInCar = IsPedSittingInAnyVehicle(PlayerPedId())    if closestPlayer ~= -1 and closestDistance <= 3.0 and not isInCar and CanDoWhileDead(targetPed) then        TriggerServerEvent('ons_dragme:putInVehicle', GetPlayerServerId(closestPlayer))    else        exports['mythic_notify']:DoHudText('error', 'No nearby people.')    endendfunction InventoryCheckMenu()    if ESX.PlayerData.job.name == 'police' then        searchpolice()    else        stealppl()    endendfunction stealppl()    local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()    local targetPed = GetPlayerPed(closestPlayer)    if closestPlayer ~= -1 and closestDistance <= 3.0 and not isInCar  then        if not IsPedDeadOrDying(targetPed) then             if IsEntityPlayingAnim(targetPed, 'random@arrests@busted', 'idle_a', 3) then                 TriggerEvent("esx_inventoryhud:openPlayerInventory", GetPlayerServerId(closestPlayer), GetPlayerName(closestPlayer))            else                 exports['mythic_notify']:DoHudText('error', 'cant steal current state')            end        else             exports['mythic_notify']:DoHudText('error', 'the player is fcking dead')        end    else        exports['mythic_notify']:DoHudText('error', 'No nearby people.')    endend     function searchpolice()    local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()    local targetPed = GetPlayerPed(closestPlayer)    if closestPlayer ~= -1 and closestDistance <= 3.0 and not isInCar and CanDoWhileDead(targetPed) then        if ESX.PlayerData.job.name ~= nil then              if ESX.PlayerData.job.name == 'police'  then                 if IsEntityPlayingAnim(targetPed, 'mp_arresting', 'idle', 3) then                     TriggerEvent("esx_inventoryhud:openPlayerInventory", GetPlayerServerId(closestPlayer), GetPlayerName(closestPlayer))                else                     exports['mythic_notify']:DoHudText('error', 'cuff first then search ')                end            else                 exports['mythic_notify']:DoHudText('error', 'only for policejob.')            end        end    else        exports['mythic_notify']:DoHudText('error', 'No nearby people.')    endendfunction OutVehicle()    -- check if doing in the vehicle    if not IsPedSittingInAnyVehicle(GetPlayerPed(-1)) then        exports['mythic_notify']:DoHudText('error', 'You are not in the vehicle ')        return    end    if Config.Jobs.LimitJobs and not CanDoJob() then        return    end    local closestPlayer, closestDistance = ESX.Game.GetClosestPlayer()    local targetPed = GetPlayerPed(closestPlayer)    if closestPlayer ~= -1 and closestDistance <= 3.0 and CanDoWhileDead(targetPed) then        TriggerServerEvent('ons_dragme:OutVehicle', GetPlayerServerId(closestPlayer))    else        exports['mythic_notify']:DoHudText('error', 'No nearby people.')    endendfunction CanDoWhileDead(targetPed)    if Config.OnlyWhileDead then        return IsPedDeadOrDying(targetPed)    else        return true    endendRegisterCommand("drag", function(src, args, raw)    if Config.EnableCommands then        DragMe()    endend)RegisterCommand("outveh", function(src, args, raw)    if Config.EnableCommands then        OutVehicle()    endend)RegisterCommand("putveh", function(src, args, raw)    if Config.EnableCommands then        PutInVehicle()    endend)RegisterCommand("search", function(src, args, raw) -- for police    searchpolice()end)RegisterCommand("steal", function(src, args, raw) -- for fcking guys    stealppl()end)RegisterNetEvent('ons_dragme:drag')AddEventHandler('ons_dragme:drag', function(draggerId)    local playerPed = GetPlayerPed(-1)    DetachEntity(playerPed, true, false)    dragStatus.isDragged = not dragStatus.isDragged    dragStatus.draggerId = draggerId    isInVehicle = false    vehicle = nilend)RegisterNetEvent('ons_dragme:detach')AddEventHandler('ons_dragme:detach', function()    dragStatus.isDragged = false    isInVehicle = false    vehicle = nilend)Citizen.CreateThread(function()    local playerPed    local targetPed    while true do        Citizen.Wait(0)        if true then            playerPed = PlayerPedId()            if not CanDoWhileDead(playerPed) then                isInVehicle = false            end            if dragStatus.isDragged then                targetPed = GetPlayerPed(GetPlayerFromServerId(dragStatus.draggerId))                if CanDoWhileDead(playerPed) then                    AttachEntityToEntity(playerPed, targetPed, 11816, 0.54, 0.54, 0.0, 0.0, 0.0, 0.0, false, false, false, false, 2, true)                else                    dragStatus.isDragged = false                    DetachEntity(playerPed, true, false)                end                if IsPedDeadOrDying(targetPed, true) then                    dragStatus.isDragged = false                    DetachEntity(playerPed, true, false)                end            elseif isInVehicle then                DisableAllControlActions(0)                EnableControlAction(0, 1)                EnableControlAction(0, 2)                AttachEntityToEntity(playerPed, InVehicle, -1, 0.0, 0.0, 0.4, 0.0, 0.0, 0.0, false, false, true, true, 2, true)            else                isInVehicle = false            end        else            Citizen.Wait(500)        end    endend)function VehicleInFront()    local pos = GetEntityCoords(GetPlayerPed(-1))    local entityWorld = GetOffsetFromEntityInWorldCoords(GetPlayerPed(-1), 0.0, 4.0, 0.0)    local rayHandle = CastRayPointToPoint(pos.x, pos.y, pos.z, entityWorld.x, entityWorld.y, entityWorld.z, 10, GetPlayerPed(-1), 0)    local a, b, c, d, result = GetRaycastResult(rayHandle)    return resultendRegisterNetEvent('ons_dragme:putInVehicle')AddEventHandler('ons_dragme:putInVehicle', function()    local playerPed = PlayerPedId()    local coords = GetEntityCoords(playerPed)    if IsAnyVehicleNearPoint(coords, 5.0) then        --local vehicle = GetClosestVehicle(coords, 5.0, 0, 71)        local vehicle = VehicleInFront()        print('Veh : ' ..vehicle)        if IsEntityAVehicle(vehicle) then            TriggerEvent("sleepanims")            Citizen.Wait(1000)            for i=1,GetVehicleMaxNumberOfPassengers(vehicle) do                if IsVehicleSeatFree(vehicle,i) then                    print('seat : '..i)                    Citizen.Wait(100)                    SetPedIntoVehicle(GetPlayerPed(-1),vehicle,i)                    dragStatus.isDragged = false                    isInVehicle = true                    InVehicle = vehicle                    --return true                end            end            if IsVehicleSeatFree(vehicle,0) then                Citizen.Wait(100)                SetPedIntoVehicle(GetPlayerPed(-1),vehicle,0)                dragStatus.isDragged = false                isInVehicle = true                InVehicle = vehicle            end        end    endend)RegisterNetEvent('ons_dragme:OutVehicle')AddEventHandler('ons_dragme:OutVehicle', function()    print("unseating the player")    local ped = GetPlayerPed(-1)    local pos = GetEntityCoords(ped,  true)    SetEntityCoords(ped , pos['x'] , pos['y'], pos['z'] + 0.5 )    SetEntityCollision(GetPlayerPed(-1), true, true)    isInVehicle = false    InVehicle = nilend)